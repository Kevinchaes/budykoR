% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{budyko_errbounds}
\alias{budyko_errbounds}
\title{Generate errorbounds from a Budyko fit}
\usage{
budyko_errbounds(
  fit = NULL,
  res = 0.1,
  hshift = FALSE,
  dif = "nls",
  data = NULL,
  alpha = 0.05,
  method = NULL
)
}
\arguments{
\item{fit}{\link{list} dataframe object with names() method and entries
"param" for parameter p, "err" for vertical fit error, and "hshift" for
optional hshift value (default to zero)}

\item{res}{\link{numeric} resolution of fit, defaults to 0.01 units}

\item{hshift}{A boolean.  T/F (default F), whether to test for horizontal shift.
hs value must be defined in fit}

\item{dif}{A string. One of the following: "nls" (default) "rsq" "mae". Determines whether
to fit automatically with stats::nls, or manually, with best fit determined by either
Pearson's R squared or Minimum Mean Absolute Error}

\item{data}{\link{list} dataframe requiring the following two columns: "PET.P" for
potential evapotranspiration divided by precipitation (units normalized,
dimensionless), and "AET.P" for actual evapotranspiration divided by precipitation
or one minus the runoff coefficient (Q/P)}

\item{alpha}{\link{numeric} If using dif="nls", confidence value for bounds. Default to 0.05 (95\% confidence)}

\item{method}{A string. One of the following: Fu, Turc-Pike, Wang-Tang}
}
\value{
Given a "fit" dataframe object from budyko::budyko_fit,
generate a dataframe of error bounds that can be fed to plot or
ggplot2::ggplot. name (as in names()) of fit must be the method
}
\description{
Generate errorbounds from a Budyko fit
}
\examples{
library(ggplot2)
fitdata = budyko_errbounds(data=testdata,method="Fu")
blankBC+
  geom_polygon(data=subset(fitdata,key!="fit"),aes(lty=key),
               col=1,fill="transparent")+
  geom_line(data=subset(fitdata,key=="fit"),aes(lty="fit"))+
  scale_linetype_manual(values=c("fit"=1,"confidence"=2,"prediction"=3))+
  geom_point(data=testdata)+
  coord_cartesian(xlim=c(0,5),ylim=c(0,1))
}
